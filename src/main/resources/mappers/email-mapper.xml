<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.groovy.email.EmailMapper">
    <insert id="inputReceivedEmailsFrom" parameterType="emailVO">
        INSERT INTO EMAIL_FROM( EMAIL_ETPR_CODE
                              , EMAIL_FROM_ADDR
                              , EMAIL_SN
                              , EMAIL_FROM_SJ
                              , EMAIL_FROM_CN
                              , EMAIL_FROM_CN_TYPE
                              , EMAIL_FROM_SEND_DATE
                              , EMAIL_FROM_TMPR_STRE_AT)
        VALUES ( 'EMAIL-' || EMAIL_SEQ.NEXTVAL || '-' || TO_CHAR(#{emailFromSendDate}, 'YYYYMMDD')
               , #{emailFromAddr}
               , #{emailSn}
               , #{emailFromSj}
               , #{emailFromCn}
               , #{emailFromCnType}
               , #{emailFromSendDate}
               , #{emailFromTmprStreAt})
    </insert>

    <insert id="inputReceivedEmailsTo" parameterType="emailVO">
        INSERT INTO EMAIL_TO( EMAIL_ETPR_CODE
                            , EMAIL_FROM_ADDR
                            , EMAIL_SN
                            , EMAIL_TO_ADDR
                            , EMAIL_TO_RECEIVED_DATE)
        VALUES ( 'EMAIL-' || EMAIL_SEQ.CURRVAL || '-' || TO_CHAR(#{emailFromSendDate}, 'YYYYMMDD')
               , #{emailFromAddr}
               , #{emailSn}
               , #{emailToAddr}
               , #{emailToReceivedDate})
    </insert>

    <insert id="inputReceivedEmailsCc" parameterType="emailVO">
        INSERT INTO EMAIL_CC( EMAIL_ETPR_CODE
                            , EMAIL_FROM_ADDR
                            , EMAIL_SN
                            , EMAIL_CC_ADDR
                            , EMAIL_CC_RECEIVED_DATE)
        VALUES ( 'EMAIL-' || EMAIL_SEQ.CURRVAL || '-' || TO_CHAR(#{emailFromSendDate}, 'YYYYMMDD')
               , #{emailFromAddr}
               , #{emailSn}
               , #{emailCcAddr}
               , #{emailCcReceivedDate})
    </insert>

    <insert id="inputReceivedStatus" parameterType="emailVO">
        INSERT INTO EMAIL_RECEIVED_STTUS( EMAIL_ETPR_CODE
                                        , EMAIL_FROM_ADDR
                                        , EMAIL_RECEIVED_EMPL_ID
                                        , EMAIL_SN
                                        , EMAIL_REDNG_AT
                                        , EMAIL_DELETE_AT
                                        , EMAIL_IMPRTNC_AT
                                        , EMAIL_REAL_DELETE_AT)
        VALUES ( 'EMAIL-' || EMAIL_SEQ.CURRVAL || '-' || TO_CHAR(#{emailFromSendDate}, 'YYYYMMDD')
               , #{emailFromAddr}
               , #{emailReceivedEmplId}
               , #{emailSn}
               , #{emailRedngAt}
               , #{emailDeleteAt}
               , #{emailImprtncAt}
               , #{emailRealDeleteAt})
    </insert>
    <insert id="uploadEmailFile" parameterType="map">
        INSERT INTO UPLOAD_FILE(UPLOAD_FILE_SN,
                                UPLOAD_FILE_ETPR_CODE,
                                UPLOAD_FILE_ORGINL_NM,
                                UPLOAD_FILE_STRE_NM,
                                UPLOAD_FILE_SIZE,
                                UPLOAD_FILE_RGSDE)
        VALUES (UPLOAD_FILE_SEQ.NEXTVAL,
                #{notiEtprCode},
                #{originalFileName},
                #{newFileName},
                #{fileSize},
                SYSDATE)
    </insert>
    <update id="deleteMails" parameterType="String">
        UPDATE EMAIL_RECEIVED_STTUS
        SET EMAIL_REAL_DELETE_AT = 'Y'
        WHERE EMAIL_ETPR_CODE = #{emailEtprCode}
    </update>

    <select id="existsMessageNumber" resultType="int" parameterType="Map">
        SELECT COUNT(EF.EMAIL_SN)
        FROM EMAIL_FROM EF
                 LEFT JOIN EMAIL_TO ET ON EF.EMAIL_ETPR_CODE = ET.EMAIL_ETPR_CODE
                 LEFT JOIN EMAIL_CC EC ON EF.EMAIL_ETPR_CODE = EC.EMAIL_ETPR_CODE
        WHERE EF.EMAIL_SN = #{emailSn}
          AND (ET.EMAIL_TO_ADDR = #{nowEmailAddr} OR EC.EMAIL_CC_ADDR = #{nowEmailAddr})
    </select>

    <!-- 수신받은 메일함 -->
    <select id="getAllReceivedMailsToMe" resultType="emailVO" parameterType="Map">
        SELECT DISTINCT EF.EMAIL_ETPR_CODE
                      , EF.EMAIL_SN
                      , EF.EMAIL_FROM_ADDR
                      , EF.EMAIL_FROM_SJ
                      , EF.EMAIL_FROM_SEND_DATE
                      , ET.EMAIL_TO_ADDR
                      , ET.EMAIL_TO_RECEIVED_DATE
                      , ERS.EMAIL_DELETE_AT
                      , ERS.EMAIL_IMPRTNC_AT
                      , ERS.EMAIL_REDNG_AT
        FROM EMAIL_FROM EF
                 LEFT JOIN EMAIL_TO ET ON EF.EMAIL_ETPR_CODE = ET.EMAIL_ETPR_CODE
                 LEFT JOIN EMAIL_RECEIVED_STTUS ERS ON EF.EMAIL_ETPR_CODE = ERS.EMAIL_ETPR_CODE
        WHERE EF.EMAIL_FROM_ADDR NOT IN #{emailAddr}
          AND ET.EMAIL_TO_ADDR IN #{emailAddr}
          AND ERS.EMAIL_DELETE_AT = #{at}
          AND ERS.EMAIL_REAL_DELETE_AT = 'N'
        ORDER BY EF.EMAIL_ETPR_CODE DESC
    </select>

    <!-- 참조받은 메일함 -->
    <select id="getAllReferencedMailsToMe" resultType="emailVO" parameterType="Map">
        SELECT DISTINCT EF.EMAIL_ETPR_CODE
                      , EF.EMAIL_SN
                      , EF.EMAIL_FROM_ADDR
                      , EF.EMAIL_FROM_SJ
                      , EF.EMAIL_FROM_SEND_DATE
                      , EC.EMAIL_CC_ADDR
                      , EC.EMAIL_CC_RECEIVED_DATE
                      , ERS.EMAIL_DELETE_AT
                      , ERS.EMAIL_IMPRTNC_AT
                      , ERS.EMAIL_REDNG_AT
        FROM EMAIL_FROM EF
                 LEFT JOIN EMAIL_CC EC ON EF.EMAIL_ETPR_CODE = EC.EMAIL_ETPR_CODE
                 LEFT JOIN EMAIL_RECEIVED_STTUS ERS ON EF.EMAIL_ETPR_CODE = ERS.EMAIL_ETPR_CODE
        WHERE EF.EMAIL_FROM_ADDR NOT IN #{emailAddr}
          AND EC.EMAIL_CC_ADDR IN #{emailAddr}
          AND ERS.EMAIL_DELETE_AT = #{at}
          AND ERS.EMAIL_REAL_DELETE_AT = 'N'
        ORDER BY EF.EMAIL_ETPR_CODE DESC
    </select>

    <!-- 내게 쓴 메일함 -->
    <select id="getAllSentMailsToMe" resultType="emailVO" parameterType="Map">
        SELECT DISTINCT EF.EMAIL_ETPR_CODE
                      , EF.EMAIL_SN
                      , EF.EMAIL_FROM_ADDR
                      , EF.EMAIL_FROM_SJ
                      , EF.EMAIL_FROM_SEND_DATE
                      , ET.EMAIL_TO_ADDR
                      , ET.EMAIL_TO_RECEIVED_DATE
                      , ERS.EMAIL_DELETE_AT
                      , ERS.EMAIL_IMPRTNC_AT
        FROM EMAIL_FROM EF
                 LEFT JOIN EMAIL_TO ET ON EF.EMAIL_ETPR_CODE = ET.EMAIL_ETPR_CODE
                 LEFT JOIN EMAIL_RECEIVED_STTUS ERS ON EF.EMAIL_ETPR_CODE = ERS.EMAIL_ETPR_CODE
        WHERE EF.EMAIL_FROM_ADDR = #{emailAddr}
          AND EF.EMAIL_FROM_ADDR = ET.EMAIL_TO_ADDR
          AND ERS.EMAIL_DELETE_AT = #{at}
          AND ERS.EMAIL_REAL_DELETE_AT = 'N'
        ORDER BY EF.EMAIL_ETPR_CODE DESC
    </select>

    <!-- 보낸메일함 -->
    <select id="getAllSentMailsByMe" resultType="emailVO" parameterType="Map">
        SELECT EF.EMAIL_FROM_ADDR
             , EF.EMAIL_ETPR_CODE
             , EF.EMAIL_FROM_SEND_DATE
             , ERS.EMAIL_IMPRTNC_AT
             , ERS.EMAIL_DELETE_AT
             , EF.EMAIL_FROM_SJ
        FROM EMAIL_RECEIVED_STTUS ERS
                 INNER JOIN EMAIL_TO ET ON ERS.EMAIL_ETPR_CODE = ET.EMAIL_ETPR_CODE
                 INNER JOIN EMAIL_FROM EF ON EF.EMAIL_ETPR_CODE = ERS.EMAIL_ETPR_CODE
        WHERE ERS.EMAIL_FROM_ADDR = #{emailAddr}
          AND ET.EMAIL_TO_ADDR != #{emailAddr}
          AND ERS.EMAIL_REAL_DELETE_AT = 'N'
          AND ERS.EMAIL_DELETE_AT = #{at}
        ORDER BY ERS.EMAIL_ETPR_CODE DESC
    </select>

    <select id="getEmployeeByEmailAddr" resultType="int" parameterType="String">
        SELECT COUNT(EMPL_ID)
        FROM EMPL
        WHERE EMPL_EMAIL = #{emailAddr}
    </select>

    <!-- 안읽은메일개수 -->
    <select id="getUnreadMailCount" resultType="int" parameterType="String">
        SELECT COUNT(EMAIL_ETPR_CODE)
        FROM EMAIL_RECEIVED_STTUS
        WHERE EMAIL_RECEIVED_EMPL_ID = #{emplId}
          AND EMAIL_REDNG_AT = 'N'
          AND EMAIL_REAL_DELETE_AT = 'N'
    </select>

    <select id="getEmailSeq" resultType="int">
        SELECT EMAIL_SEQ.NEXTVAL
        FROM DUAL
    </select>

    <select id="getEmplNmByEmplEmail" resultType="String" parameterType="String">
        SELECT EMPL_NM
        FROM EMPL
        WHERE EMPL_EMAIL = #{emailAddr}
    </select>

    <select id="getMaxEmailSn" resultType="int">
        SELECT MAX(EMAIL_SN)
        FROM EMAIL_FROM
    </select>

    <select id="getNowEmail" resultType="emailVO" parameterType="Map">
        SELECT EF.EMAIL_ETPR_CODE
             , EF.EMAIL_FROM_ADDR
             , EF.EMAIL_SN
             , EF.EMAIL_FROM_SJ
             , EF.EMAIL_FROM_CN
             , EF.EMAIL_FROM_CN_TYPE
             , EF.EMAIL_FROM_SEND_DATE
             , ERS.EMAIL_DELETE_AT
             , (SELECT EMPL_NM FROM EMPL E WHERE E.EMPL_EMAIL = EF.EMAIL_FROM_ADDR) AS EMAIL_FROM_NM
        FROM EMAIL_FROM EF
                 LEFT JOIN EMAIL_RECEIVED_STTUS ERS
                           ON EF.EMAIL_ETPR_CODE = ERS.EMAIL_ETPR_CODE and EF.EMAIL_FROM_ADDR = ERS.EMAIL_FROM_ADDR
        WHERE ERS.EMAIL_ETPR_CODE = #{emailEtprCode}
    </select>

    <select id="getToPerEmail" resultType="emailVO" parameterType="Map">
        SELECT ET.EMAIL_TO_ADDR
             , (SELECT EMPL_NM FROM EMPL E WHERE E.EMPL_EMAIL = ET.EMAIL_TO_ADDR) AS EMAIL_TO_NM
        FROM EMAIL_FROM EF
                 LEFT JOIN EMAIL_TO ET ON EF.EMAIL_ETPR_CODE = ET.EMAIL_ETPR_CODE
        WHERE EF.EMAIL_ETPR_CODE = #{emailEtprCode}
    </select>

    <select id="getCcPerEmail" resultType="emailVO" parameterType="Map">
        SELECT EC.EMAIL_CC_ADDR
             , (SELECT EMPL_NM FROM EMPL E WHERE E.EMPL_EMAIL = EC.EMAIL_CC_ADDR) AS EMAIL_CC_NM
        FROM EMAIL_FROM EF
                 LEFT JOIN EMAIL_CC EC ON EF.EMAIL_ETPR_CODE = EC.EMAIL_ETPR_CODE
        WHERE EF.EMAIL_ETPR_CODE = #{emailEtprCode}
    </select>

    <!-- 전체 메일 개수 -->
    <select id="getAllMailCount" resultType="long" parameterType="String">
        SELECT COUNT(DISTINCT EMAIL_ETPR_CODE)
        FROM EMAIL_RECEIVED_STTUS
        WHERE EMAIL_RECEIVED_EMPL_ID = #{emplId}
          AND EMAIL_REAL_DELETE_AT = 'N'
    </select>

    <update id="modifyEmailRedngAt" parameterType="Map">
        update EMAIL_RECEIVED_STTUS
        set ${emailAtKind} = #{at}
        where EMAIL_ETPR_CODE in #{emailEtprCode}
    </update>
</mapper>

